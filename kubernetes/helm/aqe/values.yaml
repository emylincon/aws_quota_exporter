# Default values for aqe.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ugwuanyi/aqe
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: latest

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

livenessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 60 # might need increasing when a large number of jobs is specified
readinessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 60 # might need increasing when a large number of jobs is specified

service:
  type: ClusterIP
  port: 10100

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: aqe.chart.emylincon.com
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

configmap:
  config.yml: |
    jobs:
      - serviceCode: lambda
        regions:
          - us-west-1
          - us-east-1
      - serviceCode: cloudformation
        regions:
          - us-west-1
          - us-east-1

env:
  AWS_REGION: us-west-1

secret:
  # base64 encoded secrets (leave empty when using OIDC / kiam / kube2iam etc)
  AWS_ACCESS_KEY_ID: ""
  AWS_SECRET_ACCESS_KEY: ""

serviceMonitor:
  # Specifies whether a ServiceMonitor should be created
  create: false
  interval:
  scrapeTimeout:
  namespace:
  additionalLabels: {}
  metricRelabelings: []
  relabelings: []

prometheus:
  enabled: true
  serverFiles:
    prometheus.yml:
      scrape_configs:
        # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
        - job_name: prometheus
          # Override the global default and scrape targets from this job every 5 seconds.
          scrape_interval: 5s
          static_configs:
            - targets: ["localhost:9090"]
        - job_name: "aws_quota_exporter"
          # Override the global default and scrape targets from this job every 5 seconds.
          scrape_interval: 15s
          static_configs:
            - targets: ["aqe.default.svc.cluster.local:10100"]
  kube-state-metrics:
    enabled: false
  prometheus-node-exporter:
    enabled: false
  prometheus-pushgateway:
    enabled: false
  alertmanager:
    enabled: false

grafana:
  enabled: true
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: prometheus
          type: prometheus
          # Access mode - proxy (server in the UI) or direct (browser in the UI).
          access: proxy
          url: http://prometheus.default.svc.cluster.local:9090
          orgId: 1
          editable: true
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: "prometheus"
          orgId: 1
          folder: ""
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/prometheus
  dashboards:
    prometheus:
      quotas:
        file: dashboards/quotas.json
  grafana.ini:
    auth.basic:
      enabled: false
    auth.grafana_com:
      enabled: false
    auth.anonymous:
      enabled: true
    org_name: true
    org_role: Admin
    hide_version: true
  # adminUser: admin
  # adminPassword: admin
