name: docker

on:
  push:
    branches: ["main"]
    tags: ["*"]

env:
  APP_NAME: aqe
  IMAGE_NAME: ugwuanyi/aqe
  TEST_IMAGE: aqe/test
  REPO: https://github.com/emylincon/aws_quota_exporter

jobs:
  # prebuild:
  #   name: prebuild
  #   runs-on: ubuntu-latest
  #   env:
  #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #   permissions:
  #     contents: write
  #   outputs:
  #     tag_name: ${{ steps.tag_version.outputs.tag_name }}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Bump version and push tag
  #       id: tag_version
  #       uses: rymndhng/release-on-push-action@v0.28.0
  #       with:
  #         bump_version_scheme: norelease
  #         use_github_release_notes: true
  #         tag_prefix: v

  build:
    name: Build docker image
    # needs: [prebuild]
    permissions:
      contents: write
      packages: write
    runs-on: ubuntu-latest
    env:
      REGISTRY_DOCKERHUB_ENABLED: ${{ secrets.DOCKERHUB_USERNAME != null }}
      REGISTRY_GITHUB_ENABLED: ${{ secrets.REGISTRY_GITHUB != null }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: ^1.20

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up docker testing tool
        run: curl -LO https://storage.googleapis.com/container-structure-test/latest/container-structure-test-linux-amd64 && chmod +x container-structure-test-linux-amd64 && sudo mv container-structure-test-linux-amd64 /usr/local/bin/container-structure-test

      - name: Login to DockerHub Registry
        if: ${{ env.REGISTRY_DOCKERHUB_ENABLED == 'true' }}
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Login to Github Container Registry
        if: ${{ env.REGISTRY_GITHUB_ENABLED == 'true' }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Test image
        run: docker build -t ${{ env.TEST_IMAGE }} -f docker/Dockerfile .

      - name: Run Image tests
        run: container-structure-test test --config docker/tests.yaml --image ${{ env.TEST_IMAGE }}


      - name: Push to dockerhub
        # if: ${{ env.REGISTRY_DOCKERHUB_ENABLED == 'true' && needs.prebuild.outputs.tag_name != null }}
        if: ${{ env.REGISTRY_DOCKERHUB_ENABLED == 'true'  }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: "docker/Dockerfile"
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: |
            "${{ env.IMAGE_NAME }}:latest"
            "${{ env.IMAGE_NAME }}:${{ github.ref_name }}"

          # tags: |
          #   "${{ env.IMAGE_NAME }}:latest"
          #   "${{ env.IMAGE_NAME }}:${{ needs.prebuild.outputs.tag_name }}"

      - name: Push to ghcr
        if: ${{ env.REGISTRY_GITHUB_ENABLED == 'true'  }}
        # if: ${{ env.REGISTRY_GITHUB_ENABLED == 'true' && needs.prebuild.outputs.tag_name != null }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: "docker/Dockerfile"
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          # labels: org.opencontainers.image.source=${{ env.REPO }},org.opencontainers.image.version=${{ needs.prebuild.outputs.tag_name }}
          labels: org.opencontainers.image.source=${{ env.REPO }},org.opencontainers.image.version=${{ github.ref_name }}
          tags: |
            "${{ secrets.REGISTRY_GITHUB }}/${{ env.APP_NAME }}:latest"
            "${{ secrets.REGISTRY_GITHUB }}/${{ env.APP_NAME }}:${{ github.ref_name }}"

