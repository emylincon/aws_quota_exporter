name: changes

on:
  pull_request:
    branches: ["main"]

jobs:
  # job1:
  #   runs-on: ubuntu-latest
  #   # Map a step output to a job output
  #   outputs:
  #     output1: ${{ steps.step1.outputs.test }}
  #     output2: ${{ steps.step2.outputs.test }}
  #   steps:
  #     - id: step1
  #       run: echo "test=hello" >> "$GITHUB_OUTPUT"
  #     - id: step2
  #       run: echo "test=world" >> "$GITHUB_OUTPUT"
  # job2:
  #   runs-on: ubuntu-latest
  #   needs: job1
  #   steps:
  #     - env:
  #         OUTPUT1: ${{needs.job1.outputs.output1}}
  #         OUTPUT2: ${{needs.job1.outputs.output2}}
  #       run: echo "$OUTPUT1 $OUTPUT2"

  detect:
    name: detect file changes
    runs-on: ubuntu-latest
    outputs:
      run: ${{ steps.diff.outputs.run }}
    steps:
      - uses: actions/checkout@v3
        id: checkout

      # --diff-filter=[(A|C|D|M|R|T|U|X|B)…​[*]]
      # Select only files that are Added (A), Copied (C), Deleted (D), Modified (M), Renamed (R), have their type (i.e. regular file, symlink, submodule, …​)
      # changed (T), are Unmerged (U), are Unknown (X), or have had their pairing Broken (B). Any combination of the filter characters (including none) can be used.
      # When * (All-or-none) is added to the combination, all paths are selected if there is any file that matches other criteria in the comparison;
      # if there is no file that matches other criteria, nothing is selected.
      - name: file-changes-1
        id: diff
        run: |
          git fetch
          run="no"
          include="yml go"
          for i in $(git --no-pager diff --name-only --diff-filter=ACMRT ${{github.event.pull_request.base.sha}} ${{ github.event.pull_request.head.sha }}); do
              extension=${i##*.}
              echo "running $i - extension=${i##*.}"
              if [[ "$include" == *"$extension"* ]]; then
                  run="yes"
              fi
          done
          echo "run=${run}"  >> "$GITHUB_OUTPUT"
  job2:
    runs-on: ubuntu-latest
    needs: detect
    if: needs.detect.outputs.run == 'yes'
    steps:
      - name: my-yes-run
        run: echo running yes...

  job3:
    runs-on: ubuntu-latest
    needs: detect
    if: needs.detect.outputs.run == 'no'
    steps:
      - name: my-no-run
        run: echo running no...
