# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  FILES_TO_MONITOR: "yml go mod sum"

jobs:
  detect:
    name: detect file changes
    runs-on: ubuntu-latest
    outputs:
      run: ${{ steps.diff.outputs.run }}
    steps:
      - uses: actions/checkout@v3
        id: checkout

      # --diff-filter=[(A|C|D|M|R|T|U|X|B)…​[*]]
      # Select only files that are Added (A), Copied (C), Deleted (D), Modified (M), Renamed (R), have their type (i.e. regular file, symlink, submodule, …​)
      # changed (T), are Unmerged (U), are Unknown (X), or have had their pairing Broken (B). Any combination of the filter characters (including none) can be used.
      # When * (All-or-none) is added to the combination, all paths are selected if there is any file that matches other criteria in the comparison;
      # if there is no file that matches other criteria, nothing is selected.
      - name: file-changes
        id: diff
        run: |
          run="no"
          if [[ "${{ github.event_name }}" == "pull_request" ]];then
            git fetch
            include="${{ env.FILES_TO_MONITOR }}"
            for i in $(git --no-pager diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }}); do
              extension=${i##*.}
              if [[ "$include" == *"$extension"* ]]; then
                run="yes"
              fi
            done
          fi
          echo "run=${run}"  >> "$GITHUB_OUTPUT"

  build:
    runs-on: ubuntu-latest
    needs: detect
    if: needs.detect.outputs.run == 'yes'
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...
