# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  tag_name: v2.0.1
  REPO: https://github.com/emylincon/aws_quota_exporter

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.21

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...
  chartreleaser:
    name: Releaser Helm Chart
    # depending on default permission settings for your org (contents being read-only or read-write for workloads), you will have to add permissions
    # see: https://docs.github.com/en/actions/security-guides/automatic-token-authentication#modifying-the-permissions-for-the-github_token
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Config Chart Helm Version
        run: |
          tag_name=${{ env.tag_name }}
          version="${tag_name#v}"
          configfile="kubernetes/helm/aqe/Chart.yaml"
          yq -i ".appVersion = \"${version}\"" $configfile
          yq -i ".version = \"${version}\"" $configfile
          cat $configfile
      
      - name: Update Image version
        run: |
          tag_name=${{ env.tag_name }}
          configfile="kubernetes/helm/aqe/values.yaml"
          yq -i ".image.tag = \"${tag_name}\"" $configfile
          cat $configfile

      - name: Push Changes to main
        run: |
          git checkout -b auto/releaser-pipeline${{ env.tag_name }}
          git commit -am "releaser (pipeline): Update Helm Chart version"
          git push

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3.10.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "releaser (pipeline): Update Helm Chart version ${{ env.tag_name }}"
          title: "releaser (pipeline): Update Helm Chart version ${{ env.tag_name }}"
          body: |
            # Description
            Update Helm Chart version ${{ env.tag_name }}
          branch: auto/releaser-pipeline${{ env.tag_name }}
          base: main

      - name: Install Helm
        uses: azure/setup-helm@v3

      - name: helm package
        run: |
          helm package kubernetes/helm/aqe -d .cr-release-packages/
          helm repo index .cr-release-packages

      - name: Add new chart entry to index.yaml
        run: |
          tag_name=${{ env.tag_name }}
          version="${tag_name#v}" # without the v
          indexfile=".cr-release-packages/index.yaml"

          pkg=helm-chart-aqe-${version}.tgz
          mv .cr-release-packages/aqe-${version}.tgz .cr-release-packages/$pkg

          wget -q https://github.com/emylincon/aws_quota_exporter/raw/gh-pages/index.yaml
          
          # set chart remote URL
          chart="${{ env.REPO }}/releases/download/${tag_name}/${pkg}"

          # update chart URL
          yq -i ".entries.aqe[-1].urls[0] = \"${chart}\"" $indexfile

          # merge entries.aqe two index.yaml files
          yq eval-all '.entries.aqe as $item ireduce ({}; .entries.aqe += $item) | .entries.aqe' $indexfile index.yaml > merge_entries.yaml

          # update index.yaml with merged entries.aqe
          yq eval '.entries.aqe = load("merge_entries.yaml")' $indexfile > index.yaml

          # cleanup
          rm merge_entries.yaml

      # https://github.com/marketplace/actions/upload-to-github-release
      - name: git release update
        uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: ".cr-release-packages/*.tgz"
          update_latest_release: true
      # https://github.com/peaceiris/actions-gh-pages#table-of-contents

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          exclude_assets: ".cr-release-packages"
          publish_dir: .
          enable_jekyll: true
          commit_message: "Tag {{ env.tag_name }} release update"
